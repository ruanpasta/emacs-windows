#+title: Desktop environment with EXWM
#+author: Ruan Pasta

* EXWM config

#+begin_src emacs-lisp
  (defun efs/run-in-background (command)
    (let ((command-parts (split-string command "[ ]+")))
      (apply #'call-process `(,(car command-parts) nil 0 nil ,@(cdr command-parts)))))

  (defun efs/set-wallpaper ()
    (interactive)
    ;; NOTE: You will need to update this to a valid background path!
    (start-process-shell-command
     "feh" nil  "feh --bg-scale /usr/share/backgrounds/amazing-nature-4k.jpeg"))

  (defun efs/exwm-init-hook ()
    ;; Make workspace 1 be the one where we land at startup
    (exwm-workspace-switch-create 1)

    ;; Open eshell by default
    ;;(eshell)

    ;; Show battery status in the mode line
    (display-battery-mode nil)

    ;; Show the time and date in modeline
    (setq display-time-day-and-date t)
    (display-time-mode 1)
    ;; Also take a look at display-time-format and format-time-string

    ;; Show battery status in the mode line
    (display-battery-mode 1)

    ;; Show the time and date in modeline
    (setq display-time-day-and-date t)
    (display-time-mode 1)
    ;; Also take a look at display-time-format and format-time-string

    ;; TODO: Remove this in the future
    ;; Launch apps that will run in the background
    (efs/run-in-background "nm-applet")
    (efs/run-in-background "pasystray")
    (efs/run-in-background "blueman-applet"))

  (defun efs/exwm-update-class ()
    (exwm-workspace-rename-buffer exwm-class-name))

  (defun efs/exwm-update-title ()
    (pcase exwm-class-name
      ("Firefox-esr" (exwm-workspace-rename-buffer (format "Firefox: %s" exwm-title)))))

  (defun efs/configure-window-by-class ()
    (interactive)
    (pcase exwm-class-name
      ("Firefox-esr" (exwm-workspace-move-window 2))
      ("Slack" (exwm-workspace-move-window 3))
      ("discord" (exwm-workspace-move-window 4))
      ("mpv" (exwm-floating-toggle-floating)
       (exwm-layout-toggle-mode-line))
      ))

  (defun ruanpasta/start-discord-hook ()
  (start-process "discord" nil "discord"))

  (use-package exwm
    :config
    ;; Set the default number of workspaces
    (setq exwm-workspace-number 5)

    ;; When window "class" updates, use it to set the buffer name
    (add-hook 'exwm-update-class-hook #'efs/exwm-update-class)

    ;; When window title updates, use it to set the buffer name
    (add-hook 'exwm-update-title-hook #'efs/exwm-update-title)

    ;; Configure windows as they're created
    (add-hook 'exwm-manage-finish-hook #'efs/configure-window-by-class)

    ;; When EXWM starts up, do some extra confifuration
    (add-hook 'exwm-init-hook #'ruanpasta/start-discord-hook)

    ;; When EXWM starts up, do some extra confifuration
    (add-hook 'exwm-init-hook #'efs/exwm-init-hook)

    ;; Rebind CapsLock to Ctrl
    (start-process-shell-command "xmodmap" nil "xmodmap ~/.emacs.d/exwm/Xmodmap")

    ;; Set the screen resolution (update this to be the correct resolution for your screen!)
    (require 'exwm-randr)
    (exwm-randr-enable)
    ;; (start-process-shell-command "xrandr" nil "xrandr --output DP-2 --mode 2560x1440 --rate 239.96 --pos 0x0 --rotate normal")
    ;; (start-process-shell-command "xrandr" nil "xrandr --output DP-1 --mode 1920x1080 --rate 239.76")

  (start-process-shell-command "xrandr" nil "xrandr --output HDMI-0 --off --output DP-0 --mode 1920x1080 --rate 239.76 --pos 2560x0 --rotate normal --output DP-1 --off --output DP-2  --primary --mode 2560x1440 --rate 239.96 --pos 0x0 --rotate normal --output DP-3 --off --output DP-4 --off --output DP-5 --off")

    (setq exwm-randr-workspace-monitor-plist '(2 "DP-0" 3 "DP-0"))

    ;; Set the wallpaper after change the resolution
    (efs/set-wallpaper)

    ;; Load the system tray before exwm-init
    (require 'exwm-systemtray)
    (setq exwm-systemtray-height 30)
    (exwm-systemtray-enable)

    ;; These keys should always pass through to Emacs
    (setq exwm-input-prefix-keys
          '(?\C-x
            ?\C-u
            ?\C-h
            ?\M-x
            ?\M-`
            ?\M-&
            ?\M-:
            ?\C-\M-j  ;; Buffer list
            ?\C-\ ))  ;; Ctrl+Space

    ;; Ctrl+Q will enable the next key to be sent directly
    (define-key exwm-mode-map [?\C-q] 'exwm-input-send-next-key)

    ;; Set up global key bindings.  These always work, no matter the input state!
    ;; Keep in mind that changing this list after EXWM initializes has no effect.
    (setq exwm-input-global-keys
          `(
            ;; Reset to line-mode (C-c C-k switches to char-mode via exwm-input-release-keyboard)
            ([?\s-r] . exwm-reset)

            ;; Move between windows
            ([s-left] . windmove-left)
            ([s-right] . windmove-right)
            ([s-up] . windmove-up)
            ([s-down] . windmove-down)

            ;; Launch applications via shell command
            ([?\s-&] . (lambda (command)
                         (interactive (list (read-shell-command "$ ")))
                         (start-process-shell-command command nil command)))

            ;; Switch workspace
            ([?\s-w] . exwm-workspace-switch)
            ([?\s-`] . (lambda () (interactive) (exwm-workspace-switch-create 0)))

            ;; 's-N': Switch to certain workspace with Super (Win) plus a number key (0 - 9)
            ,@(mapcar (lambda (i)
                        `(,(kbd (format "s-%d" i)) .
                          (lambda ()
                            (interactive)
                            (exwm-workspace-switch-create ,i))))
                      (number-sequence 0 9))))

    (exwm-input-set-key (kbd "M-s-SPC") 'counsel-linux-app)
    (exwm-input-set-key (kbd "s-f") 'exwm-layout-toggle-fullscreen)

    (exwm-enable))
#+end_src

 
** Desktop File

This file is used by your "login manager" (GDM, LightDM, etc) to display EXWM as a desktop environment option when you log in.

*IMPORTANT*: Make sure you create a symbolic link for this file into =/usr/share/xsessions=:

#+begin_src sh :tangle no

  # sudo ln -f ~/.emacs.d/exwm/EXWM.desktop /usr/share/xsessions/EXWM.desktop

#+end_src

#+begin_src shell :tangle ./exwm/EXWM.desktop :mkdirp yes

  [Desktop Entry]
  Name=EXWM
  Comment=Emacs Window Manager
  Exec=sh /home/daviwil/.emacs.d/exwm/start-exwm.sh
  TryExec=sh
  Type=Application
  X-LightDM-DesktopName=exwm
  DesktopNames=exwm

#+end_src

** Launcher Script

This launcher script is invoked by =EXWM.desktop= to start Emacs and load our desktop environment configuration.  We also start up some other helpful applications to configure the desktop experience.

#+begin_src shell :tangle ./exwm/start-exwm.sh :shebang #!/bin/sh

  # Set the screen DPI (uncomment this if needed!)
  # xrdb ~/.emacs.d/exwm/Xresources

  # Run the screen compositor
  compton &

  # Enable screen locking on suspend
  xss-lock -- slock &

  # Fire it up
  exec dbus-launch --exit-with-session emacs -mm --debug-init -l ~/.emacs.d/desktop.el

#+end_src

** Keyboard Configuration

The =Xmodmap= file will be used with the =xmodmap= program to remap CapsLock to Ctrl inside of our desktop environment:

#+begin_src sh :tangle ./exwm/Xmodmap

  clear lock
  clear control
  keycode 66 = Control_L
  add control = Control_L
  add Lock = Control_R

#+end_src
